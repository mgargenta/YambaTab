package com.marakana.yambatab;

import android.app.ListFragment;
import android.app.LoaderManager;
import android.content.CursorLoader;
import android.content.Loader;
import android.database.Cursor;
import android.os.Bundle;
import android.widget.SimpleCursorAdapter;

public class TimelineFragment extends ListFragment implements
    LoaderManager.LoaderCallbacks<Cursor> {
  static final String[] FROM = new String[] { StatusData.C_USER,
      StatusData.C_TEXT };
  static final int[] TO = new int[] { android.R.id.text1, android.R.id.text2 };

  // This is the Adapter being used to display the list's data.
  SimpleCursorAdapter mAdapter;

  @Override
  public void onActivityCreated(Bundle savedInstanceState) {
    super.onActivityCreated(savedInstanceState);

    // Give some text to display if there is no data. In a real
    // application this would come from a resource.
    setEmptyText("No timeline yet...");

    // We have a menu item to show in action bar.
    setHasOptionsMenu(true);

    // Create an empty adapter we will use to display the loaded data.
    mAdapter = new SimpleCursorAdapter(getActivity(),
        android.R.layout.simple_list_item_2, null, FROM, TO, 0);
    setListAdapter(mAdapter);

    // Prepare the loader. Either re-connect with an existing one,
    // or start a new one.
    getLoaderManager().initLoader(0, null, this);
  }

  // These are the status rows that we will retrieve.
  static final String[] PROJECTION = new String[] { StatusData.C_ID,
      StatusData.C_CREATED_AT, StatusData.C_USER, StatusData.C_TEXT };

  /* Implementation of LoaderManager.LoaderCallbacks */
  public Loader<Cursor> onCreateLoader(int id, Bundle args) {
    // This is called when a new Loader needs to be created. This
    // sample only has one Loader, so we don't care about the ID.

    // Now create and return a CursorLoader that will take care of
    // creating a Cursor for the data being displayed.
    return new CursorLoader(getActivity(), StatusProvider.CONTENT_URI,
        PROJECTION, null, null, StatusData.C_CREATED_AT + " DESC");
  }

  public void onLoadFinished(Loader<Cursor> loader, Cursor data) {
    // Swap the new cursor in. (The framework will take care of closing the
    // old cursor once we return.)
    mAdapter.swapCursor(data);
  }

  public void onLoaderReset(Loader<Cursor> loader) {
    // This is called when the last Cursor provided to onLoadFinished()
    // above is about to be closed. We need to make sure we are no
    // longer using it.
    mAdapter.swapCursor(null);
  }
}
